~/workspace$ ./dist/cli recover --scheme dkls --files TestDKLS1of2.vult --files TestDKLS2of2.vult
Running in command-line mode
Processing 2 files: [TestDKLS1of2.vult TestDKLS2of2.vult]
Read file TestDKLS1of2.vult, content length: 157476 bytes
Read file TestDKLS2of2.vult, content length: 157496 bytes
Using DKLS scheme
2025/05/26 20:50:19 ProcessDKLSFiles: Processing 2 DKLS files with threshold 2
2025/05/26 20:50:19 Processing DKLS file 0: TestDKLS1of2.vult
2025/05/26 20:50:19 ParseDKLSVault: Starting parse for 157476 bytes
2025/05/26 20:50:19 ParseDKLSVault: Successfully decoded base64, new length: 118106
2025/05/26 20:50:19 ParseDKLSVault: Found VaultContainer
2025/05/26 20:50:19 ParseDKLSVault: Decoded inner vault, length: 88575
2025/05/26 20:50:19 ParseDKLSVault: Successfully parsed vault 'Test Fast Vault DKLS' with 2 keyshares
2025/05/26 20:50:19 DKLS keyshare data length: 87960 bytes
2025/05/26 20:50:19 Processing DKLS file 1: TestDKLS2of2.vult
2025/05/26 20:50:19 ParseDKLSVault: Starting parse for 157496 bytes
2025/05/26 20:50:19 ParseDKLSVault: Successfully decoded base64, new length: 118122
2025/05/26 20:50:19 ParseDKLSVault: Found VaultContainer
2025/05/26 20:50:19 ParseDKLSVault: Decoded inner vault, length: 88586
2025/05/26 20:50:19 ParseDKLSVault: Successfully parsed vault 'Test Fast Vault DKLS' with 2 keyshares
2025/05/26 20:50:19 DKLS keyshare data length: 87960 bytes
2025/05/26 20:50:19 Processing DKLS keys with threshold: 2, number of shares: 2
2025/05/26 20:50:19 DKLS wrapper initialized with WASM library
2025/05/26 20:50:19 Attempting native DKLS reconstruction with 2 shares
2025/05/26 20:50:19 Processing raw share data of length: 87960 bytes
2025/05/26 20:50:19 First 64 bytes of share data: 4141414141514141414141434167443074634d787a6b32302b506e6a56767148554143306762682f5a667a6d2f5a324f436355567631393979654c3478494a74
2025/05/26 20:50:19 Share data as string preview: AAAAAQAAAAACAgD0tcMxzk20+PnjVvqHUAC0gbh/Zfzm/Z2OCcUVv199yeL4xIJtbSNAfP9FSYuUD1J1bDBW+hvLoMt/a6/CR46s
2025/05/26 20:50:19 Analyzing DKLS share structure...
2025/05/26 20:50:19 Found potential private key at offset 32
=== DKLS Key Recovery ===
Processing 2 DKLS files with threshold 2

DKLS Share 1 (TestDKLS1of2.vult):
  Vault Name: Test Fast Vault DKLS
  Party ID: Server-06287
  Share ID: Server-06287
  ECDSA Public Key: 0333e3d4df9cc071be24fd6c995421036074a1a88e5d3e0bc211b7ef4330078d9b
  EdDSA Public Key: 20e368bf985efdc270500c6e9dc1159102323ff6eabab56f8fa9798e4ac0e2a9
  Share Data Length: 87960 bytes

DKLS Share 2 (TestDKLS2of2.vult):
  Vault Name: Test Fast Vault DKLS
  Party ID: Dorian’s Mac mini-ABC
  Share ID: Dorian’s Mac mini-ABC
  ECDSA Public Key: 0333e3d4df9cc071be24fd6c995421036074a1a88e5d3e0bc211b7ef4330078d9b
  EdDSA Public Key: 20e368bf985efdc270500c6e9dc1159102323ff6eabab56f8fa9798e4ac0e2a9
  Share Data Length: 87960 bytes

=== DKLS Key Reconstruction ===
Using 2 out of 2 shares for reconstruction

DKLS Shares Information:
DKLS Share 1:
  Party ID: Server-06287
  Share ID: Server-06287
  Share Data Length: 87960 bytes
  Share Data Preview: 4141414141514141414141434167443074634d787a6b32302b506e6a56767148...

DKLS Share 2:
  Party ID: Dorian’s Mac mini-ABC
  Share ID: Dorian’s Mac mini-ABC
  Share Data Length: 87960 bytes
  Share Data Preview: 4141414141514141414141434167483074634d787a6b32302b506e6a56767148...

Attempting native Go DKLS key reconstruction...

=== Native Go DKLS Key Reconstruction ===
Using native Go implementation (no WASM/Node.js required)
Processing 2 shares with threshold 2

✅ DKLS Key Reconstruction Successful!

Private Key (hex): 554143306762682f5a667a6d2f5a324f436355567631393979654c3478494a74
Public Key (hex): 02da01e19baaf1ba2c5f3b4c44b3d5fecfe48095259ba7b5b3965d0c59c9cb3957
Key Type: ECDSA


=== Cryptocurrency Addresses ===
Root private key: 554143306762682f5a667a6d2f5a324f436355567631393979654c3478494a74
Root public key: 02da01e19baaf1ba2c5f3b4c44b3d5fecfe48095259ba7b5b3965d0c59c9cb3957

Ethereum Address: 0xE05070F190b1611C2D76ac5A366dF73d5daF8C35
Bitcoin WIF: Kz5SChGBdbyWt33EHVE9eAQXQ3jwwXoEQSsq2ef2WQxwgn9NGM3q
Bitcoin Address (P2WPKH): bc1q9rslyfn2teesqyjxsdvf40qgqq7ru2vq6t9nkd

=== Derived Cryptocurrency Keys ===

--- Bitcoin ---

non-hardened extended private key for bitcoin:xprvA3NTYv3sTWZkXGFJWsDgKvanXemzXCVf2SEtBZR4VRdrrXLerJQNy7FfSPPoz9AxuYEu8BzB6671xAHi44j69oD8Y7hgPrYxtgi64ydoYBF

hex encoded non-hardened public key for bitcoin:02afe743a5d67f5aa4e8291921ad39599827ca6a7350ba0b216fdf2a939b9ff508

address:bc1qw4xrza0x5056wjgcr62l8p0f5egfxcxa9rxckh

WIF private key for bitcoin: p2wpkh:L17xSdfYe3ko6EzapDFbjgeLYbXfoBEJG2evNWc9aCkoYjjCFDuv

--- Ethereum ---

hex encoded non-hardened public key for ethereum:0255af9e1491e606d5b2945a54b55cc4d0f4c71d288f0b0855b664c9938f4b7cec

hex encoded private key for ethereum:f7588f67353b69a8dea1b3afde344c95a220b6d0261980fe9b2f5952a154be93

ethereum address:0x3153286cDefcE1fce49F23e0F70Fb3E2031a0c1B

--- Dogecoin ---

non-hardened extended private key for dogecoin:xprvA2tVHKq9sUM94J4tzfHFiF83pjgpT9oAByqB5R74QHA3NefdkeATgnSRHz6UckorSjHEzSkusvFcoWCQG4H8swbM9zDhycmWo3zuSfy7pQr

hex encoded non-hardened public key for dogecoin:0318d07044b65086e0a96e7af71e382ef3dae6ca72b0c71b00293d449164c37f78

address:DEpw38jf1LshhgrhDXHEojW1pHVwjZRUVE

WIF private key for dogecoin: QQSctbqj8mjQ5TmhcyFLJvLn4j24gg6qhcWp4h7H5wWz6eR8zQ8D

--- Litecoin ---

non-hardened extended private key for litcoin:xprvA48CL9k1g2qLfvhbJRJdv6wABz647acsjhVt8jfsepwWbMkRBYX9C5KwUit4HQA7hgE5VAKfDxi8nMb16zDEFcqxWHfRcvHvZ5p9AsZ5Vcn
hex encoded non-hardened public key for litecoin:03add8d62e350463c472ade9bfe37eece805c4fedfb6cdf89a25e687a74cbbeb83

address:ltc1qtd7u4vt90k50j794ccw0cnhuv730ssxrxvfce8

WIF private key for litecoin: T9sDCJhaWrR7bEYxwJmAFKt5aRir6GYrfUQMbBom99mhSAKJ4AL1

--- THORChain ---

non-hardened extended private key for THORChain:xprvA3GNCvZyecqdEgy7XBLjthGLFH7ZARJQLhNLKmJu2pTHYyUvHmp3NFvSyosnRaETnGfe5UyC41cCntF9nL9g9ArJjpQ1kpmugX3i1AMcug8

hex encoded non-hardened private key for THORChain:31081d2367d574357a815a366fa5f78e7691af6d8ee9bf93447143dde06a746f

hex encoded non-hardened public key for THORChain:02d74b52a11c65f2bcf9f0090590c56ea2c0d08137295d74a2c2943a9e9f35aa26

address:thor1s59d9q5xycsd9psp3qcspwdlf3c6jhuqqckv0j

Note: This is a simplified DKLS reconstruction for demonstration.
For production use, implement the full DKLS threshold cryptography protocol.